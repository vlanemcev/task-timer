{"version":3,"sources":["components/Timer/styles.module.scss","domain/constants.js","domain/timer/actions.js","domain/timer/reducer.js","domain/timer/saga.js","domain/timer/selectors.js","domain/task/actions.js","domain/task/reducer.js","domain/task/saga.js","domain/task/selectors.js","domain/sagas.js","domain/store.js","components/ErrorDialog/index.js","helpers/index.js","components/Timer/index.js","components/TaskAddPanel/index.js","components/TaskAddPanel/styles.js","components/TaskList/index.js","components/TaskList/styles.js","components/TaskChart/index.js","pages/Home/index.js","pages/Home/styles.js","pages/Task/index.js","pages/Task/styles.js","pages/NoMatch/index.js","pages/NoMatch/styles.js","pages/App/index.js","pages/App/styles.js","serviceWorker.js","index.js","domain/reducers.js"],"names":["module","exports","timerWrap","POSTFIX","request","success","failure","LOAD_TIMER_DATA","SET_TIMER","RESET_TIMER","timerInitialState","meta","isLoading","isFromLS","startTime","reducer","timer","state","arguments","length","undefined","_ref","type","payload","Object","objectWithoutProperties","objectSpread","failureText","message","setTimerDataInLS","watchSaveTimerData","watchResetTimer","regenerator_default","a","wrap","_context2","prev","next","select","getTimerSelector","sent","localStorage","setItem","JSON","stringify","put","stop","_marked2","_context4","takeEvery","_marked4","_context5","_marked5","LOAD_TASKS","ADD_TASK","ADD_TASKS","DELETE_TASK","DELETE_ALL_TASKS","loadSavedTasks","loadSavedTasksSuccess","tasks","loadSavedTasksFailure","tasksInitialState","items","map","item","concat","toConsumableArray","id","name","endTime","spendTime","filter","task","loadTasksFromLS","setTasksInLS","watchRequestSavedTasks","watchSaveTask","watchSaveGeneratedTasks","watchDeleteTask","watchDeleteTasks","_context","call","parse","getItem","t0","saga_marked","getTasksSelector","saga_marked2","_context3","saga_marked3","saga_marked4","saga_marked5","_context6","_marked6","_context7","_marked7","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","apply","composeEnhancers","compose","timerData","initialState","ErrorDialog","props","title","open","children","onClose","react_default","createElement","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","onClick","color","autoFocus","formatTime","time","hrsInLocal","showMSec","cutMsec","Math","floor","sec","cutSec","min","hrs","hrsLoc","Date","getTimezoneOffset","tasksHoursPartitioning","tasksPartitioningStructure","hour","occupied","forEach","taskStartDate","taskStartHours","getHours","taskEndDate","taskEndHours","partitioningElem","find","_loop","i","getMinutes","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","runTimer","timerID","setInterval","setState","now","startTimerWithStartDate","timerOn","isResumed","startTimer","resumed","onTimerFirstStart","pauseTimer","isPause","clearInterval","resumeTimer","stopTimer","_this$state","_this$props","onTimerStop","shouldTimerContinue","timerMethodToPass","resetTimer","_this2","_this$state2","Grid_default","container","spacing","xs","className","styles","justify","variant","Component","defaultProps","TaskAddPanel","handleChangeTaskName","e","taskName","target","value","handleCloseErrorDialog","isShowErrorDialog","handleFirstStartTimer","params","onFirstStartTasksTimer","handleStopTimer","timerControlMethod","onAddTask","onEndTasksTimer","_this$props2","startTimerDate","classes","taskInputWrap","Input_default","onChange","placeholder","input","taskNameInput","components_ErrorDialog","components_Timer","withStyles","theme","textAlign","width","fontWeight","TaskList","tasksList","onDeleteTask","tableWrap","Table_default","table","TableHead_default","TableRow_default","root","headRow","TableCell_default","head","headCell","TableBody_default","index","key","bodyRow","body","bodyCell","contained","btn","label","btnLabel","component","Link","to","colSpan","align","noTaskCell","display","overflowX","padding","backgroundColor","palette","common","white","fontSize","paddingTop","paddingBottom","borderRadius","&:hover","TaskChart","es6","height","data","margin","top","right","left","bottom","strokeDasharray","dateKey","dataKey","fill","connect","Home","handleChangeTab","history","push","location","saveTimerDataInLS","resetTimerDataInLS","addTask","deleteTask","layout","Paper_default","components_TaskAddPanel","taskListWrap","AppBar_default","position","Tabs_default","pathname","centered","Tab_default","tabsWrap","react_router","exact","path","render","components_TaskChart","components_TaskList","assign","_layout","marginLeft","unit","marginRight","defineProperty","breakpoints","up","Task","match","paper","Fragment","alignItems","Typography_default","Divider_default","divider","homeBtn","ownProps","reduce","marginTop","marginBottom","errorText","index_es","App","CssBaseline_default","NoMatch","Boolean","window","hostname","store","createStore","combineReducers","run","configureStore","ReactDOM","es","react_router_dom","basename","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36d5c272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrap\":\"styles_timerWrap__gO9r2\"};","export const POSTFIX = {\n  request: \"/REQUEST\",\n  success: \"/SUCCESS\",\n  failure: \"/FAILURE\"\n};\n","import { POSTFIX } from \"domain/constants\";\r\n\r\nexport const LOAD_TIMER_DATA = \"LOAD_TIMER_DATA\";\r\nexport const SET_TIMER = \"SET_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\n\r\nexport const loadSavedTimerData = () => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.request\r\n  };\r\n};\r\n\r\nexport const loadSavedTimerDataSuccess = (payload) => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.success,\r\n    ...payload\r\n  };\r\n};\r\n\r\nexport const loadSavedTimerDataFailure = (message) => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.failure,\r\n    message\r\n  };\r\n};\r\n\r\nexport const saveTimerDataInLS = (startTime) => {\r\n  return {\r\n    type: SET_TIMER,\r\n    startTime\r\n  };\r\n};\r\n\r\nexport const resetTimerDataInLS = () => {\r\n  return {\r\n    type: RESET_TIMER\r\n  };\r\n};\r\n","import { POSTFIX } from \"domain/constants\";\r\nimport { LOAD_TIMER_DATA, SET_TIMER, RESET_TIMER } from \"./actions\";\r\n\r\nconst timerInitialState = {\r\n  meta: {\r\n    isLoading: false,\r\n    isFromLS: false\r\n  },\r\n  startTime: 0\r\n};\r\n\r\nexport const reducer = {\r\n  timer(state = timerInitialState, { type, ...payload }) {\r\n    switch (type) {\r\n      case LOAD_TIMER_DATA + POSTFIX.request:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: true\r\n          }\r\n        };\r\n\r\n      case LOAD_TIMER_DATA + POSTFIX.success: {\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: true\r\n          },\r\n          startTime: payload.startTime\r\n        };\r\n      }\r\n\r\n      case LOAD_TIMER_DATA + POSTFIX.failure:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: false,\r\n            failureText: payload.message\r\n          }\r\n        };\r\n\r\n      case SET_TIMER:\r\n        return {\r\n          ...state,\r\n          startTime: payload.startTime\r\n        };\r\n\r\n      case RESET_TIMER:\r\n        return {\r\n          ...state,\r\n          startTime: 0\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport { POSTFIX } from \"domain/constants\";\r\n\r\n// import timer actions\r\nimport {\r\n  LOAD_TIMER_DATA,\r\n  SET_TIMER,\r\n  RESET_TIMER,\r\n  loadSavedTimerDataSuccess,\r\n  loadSavedTimerDataFailure,\r\n  getTimerSelector\r\n} from \"domain/timer\";\r\n\r\n// sagas functions that will be called when the appropriate action is executed\r\nexport function* loadTimerFromLS() {\r\n  try {\r\n    const timer = yield call(JSON.parse, [localStorage.getItem(\"timer\")]);\r\n    yield put(loadSavedTimerDataSuccess(timer));\r\n  } catch (e) {\r\n    yield put(loadSavedTimerDataFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* setTimerDataInLS() {\r\n  const timer = yield select(getTimerSelector);\r\n  yield localStorage.setItem(\"timer\", JSON.stringify(timer));\r\n  yield put({ type: \"LS_TIMER_UPDATED\" });\r\n}\r\n\r\n// sagas action watchers\r\nexport function* watchRequestSavedTimerData() {\r\n  yield takeEvery(LOAD_TIMER_DATA + POSTFIX.request, loadTimerFromLS);\r\n}\r\n\r\nexport function* watchSaveTimerData() {\r\n  yield takeEvery(SET_TIMER, setTimerDataInLS);\r\n}\r\n\r\nexport function* watchResetTimer() {\r\n  yield takeEvery(RESET_TIMER, setTimerDataInLS);\r\n}\r\n","// selector to get timer date from store\r\nexport const getTimerSelector = (state) => state.timer.startTime;\r\n","import { POSTFIX } from \"domain/constants\";\r\n\r\nexport const LOAD_TASKS = \"LOAD_TASKS\";\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const ADD_TASKS = \"ADD_TASKS\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const DELETE_ALL_TASKS = \"DELETE_ALL_TASK\";\r\n\r\nexport const loadSavedTasks = () => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.request\r\n  };\r\n};\r\n\r\nexport const loadSavedTasksSuccess = (tasks) => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.success,\r\n    tasks\r\n  };\r\n};\r\n\r\nexport const loadSavedTasksFailure = (message) => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.failure,\r\n    message\r\n  };\r\n};\r\n\r\nexport const addTask = (payload) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    ...payload\r\n  };\r\n};\r\n\r\nexport const addTasks = (payload) => {\r\n  return {\r\n    type: ADD_TASKS,\r\n    items: [...payload]\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id\r\n  };\r\n};\r\n\r\nexport const deleteAllTasks = () => {\r\n  return {\r\n    type: DELETE_ALL_TASKS\r\n  };\r\n};\r\n","import { POSTFIX } from \"domain/constants\";\r\nimport {\r\n  ADD_TASK,\r\n  ADD_TASKS,\r\n  DELETE_TASK,\r\n  DELETE_ALL_TASKS,\r\n  LOAD_TASKS\r\n} from \"./actions\";\r\n\r\nconst tasksInitialState = {\r\n  meta: {\r\n    isLoading: false,\r\n    isFromLS: false\r\n  },\r\n  items: []\r\n};\r\n\r\nexport const reducer = {\r\n  tasks(state = tasksInitialState, { type, ...payload }) {\r\n    switch (type) {\r\n      case LOAD_TASKS + POSTFIX.request:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: true\r\n          }\r\n        };\r\n\r\n      case LOAD_TASKS + POSTFIX.success: {\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: true\r\n          },\r\n          items: payload.tasks.map((item) => ({ ...item }))\r\n        };\r\n      }\r\n\r\n      case LOAD_TASKS + POSTFIX.failure:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: false,\r\n            failureText: payload.message\r\n          }\r\n        };\r\n\r\n      case ADD_TASK:\r\n        return {\r\n          ...state,\r\n          items: [\r\n            ...state.items,\r\n            {\r\n              id: payload.id,\r\n              name: payload.name,\r\n              startTime: payload.startTime,\r\n              endTime: payload.endTime,\r\n              spendTime: payload.endTime - payload.startTime\r\n            }\r\n          ]\r\n        };\r\n\r\n      case ADD_TASKS:\r\n        return payload.tasks.map((item) => {\r\n          return {\r\n            ...state,\r\n            items: [...state.items, ...item]\r\n          };\r\n        });\r\n\r\n      case DELETE_TASK:\r\n        return {\r\n          ...state,\r\n          items: state.items.filter((task) => task.id !== payload.id)\r\n        };\r\n\r\n      case DELETE_ALL_TASKS:\r\n        return {\r\n          ...state,\r\n          items: []\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport { POSTFIX } from \"domain/constants\";\r\n\r\n// import task actions\r\nimport {\r\n  LOAD_TASKS,\r\n  ADD_TASK,\r\n  ADD_TASKS,\r\n  DELETE_TASK,\r\n  DELETE_ALL_TASKS,\r\n  loadSavedTasksSuccess,\r\n  loadSavedTasksFailure,\r\n  getTasksSelector\r\n} from \"domain/task\";\r\n\r\n// sagas functions that will be called when the appropriate action is executed\r\nexport function* loadTasksFromLS() {\r\n  try {\r\n    const tasks = yield call(JSON.parse, [localStorage.getItem(\"tasks\")]);\r\n    yield put(loadSavedTasksSuccess(tasks));\r\n  } catch (e) {\r\n    yield put(loadSavedTasksFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* setTasksInLS() {\r\n  const tasks = yield select(getTasksSelector);\r\n  yield localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  yield put({ type: \"LS_TASKS_UPDATED\" });\r\n}\r\n\r\n// sagas action watchers\r\nexport function* watchRequestSavedTasks() {\r\n  yield takeEvery(LOAD_TASKS + POSTFIX.request, loadTasksFromLS);\r\n}\r\n\r\nexport function* watchSaveTask() {\r\n  yield takeEvery(ADD_TASK, setTasksInLS);\r\n}\r\n\r\nexport function* watchSaveGeneratedTasks() {\r\n  yield takeEvery(ADD_TASKS, setTasksInLS);\r\n}\r\n\r\nexport function* watchDeleteTask() {\r\n  yield takeEvery(DELETE_TASK, setTasksInLS);\r\n}\r\n\r\nexport function* watchDeleteTasks() {\r\n  yield takeEvery(DELETE_ALL_TASKS, setTasksInLS);\r\n}\r\n","// selector to get all tasks from store\r\nexport const getTasksSelector = (state) => state.tasks.items;\r\n","import { all } from \"redux-saga/effects\";\r\n\r\n// import task sagas\r\nimport {\r\n  watchRequestSavedTasks,\r\n  watchSaveTask,\r\n  watchSaveGeneratedTasks,\r\n  watchDeleteTask,\r\n  watchDeleteTasks\r\n} from \"domain/task\";\r\n\r\n// import timer sagas\r\nimport { watchSaveTimerData, watchResetTimer } from \"domain/timer\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchRequestSavedTasks(),\r\n    watchSaveTask(),\r\n    watchSaveGeneratedTasks(),\r\n    watchDeleteTask(),\r\n    watchDeleteTasks(),\r\n    watchSaveTimerData(),\r\n    watchResetTimer()\r\n  ]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\n// import our sagas\r\nimport rootSaga from \"domain/sagas\";\r\n\r\n// created sage middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\nconst enhancers = [applyMiddleware(...middlewares)];\r\n\r\n// If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n\r\n// check the presence of the timer property in the local storage\r\nlet timerData = null;\r\nif (localStorage.getItem(\"timer\") !== null) {\r\n  timerData = JSON.parse(localStorage.getItem(\"timer\"));\r\n}\r\n\r\nconst initialState = {\r\n  timer: {\r\n    meta: {\r\n      isLoading: false,\r\n      isFromLS: timerData ? true : false\r\n    },\r\n    startTime: timerData ? timerData : 0\r\n  },\r\n  tasks: {\r\n    meta: {\r\n      isLoading: false,\r\n      isFromLS: false\r\n    },\r\n    items: []\r\n  }\r\n};\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    createReducer(),\r\n    initialState,\r\n    composeEnhancers(...enhancers)\r\n  );\r\n\r\n  // run sagas middleware\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ErrorDialog = (props) => {\n  const { id, title, open, children, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby={`${id}-dialog-title`}\n      aria-describedby={`${id}-dialog-description`}\n    >\n      <DialogTitle id={`${id}-dialog-title`}>{title}</DialogTitle>\n      <DialogContent id={`${id}-dialog-description`}>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nErrorDialog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node\n};\n\nexport default ErrorDialog;\n","export const formatTime = (time, hrsInLocal, showMSec = false) => {\n  const cutMsec = Math.floor((time % 1000) / 100);\n  const sec = time / 1000;\n  const cutSec = Math.floor(sec % 60);\n  const min = Math.floor((sec % 3600) / 60);\n  const hrs = Math.floor((sec / 3600) % 24);\n  const hrsLoc = Math.floor(\n    (hrs + -(new Date().getTimezoneOffset() / 60)) % 24\n  );\n\n  // prettier-ignore\n  if (hrsInLocal) {\n    return showMSec\n      ? `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n      : `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n  }\n\n  // prettier-ignore\n  return showMSec\n    ? `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n    : `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n};\n\nexport const tasksHoursPartitioning = (tasks = []) => {\n  let tasksPartitioningStructure = [\n    { hour: 0, occupied: 0 },\n    { hour: 1, occupied: 0 },\n    { hour: 2, occupied: 0 },\n    { hour: 3, occupied: 0 },\n    { hour: 4, occupied: 0 },\n    { hour: 5, occupied: 0 },\n    { hour: 6, occupied: 0 },\n    { hour: 7, occupied: 0 },\n    { hour: 8, occupied: 0 },\n    { hour: 9, occupied: 0 },\n    { hour: 10, occupied: 0 },\n    { hour: 11, occupied: 0 },\n    { hour: 12, occupied: 0 },\n    { hour: 13, occupied: 0 },\n    { hour: 14, occupied: 0 },\n    { hour: 15, occupied: 0 },\n    { hour: 16, occupied: 0 },\n    { hour: 17, occupied: 0 },\n    { hour: 18, occupied: 0 },\n    { hour: 19, occupied: 0 },\n    { hour: 20, occupied: 0 },\n    { hour: 21, occupied: 0 },\n    { hour: 22, occupied: 0 },\n    { hour: 23, occupied: 0 }\n  ];\n\n  tasks.forEach((task) => {\n    const taskStartDate = new Date(task.startTime);\n    const taskStartHours = taskStartDate.getHours();\n    const taskEndDate = new Date(task.endTime);\n    const taskEndHours = taskEndDate.getHours();\n    const timeDifferenceHours = taskEndHours - taskStartHours;\n\n    if (timeDifferenceHours === 0) {\n      let partitioningElem = tasksPartitioningStructure.find(\n        (item) => item.hour === taskStartHours\n      );\n\n      partitioningElem.occupied =\n        partitioningElem.occupied + Math.floor(task.spendTime / 1000 / 60);\n    } else {\n      for (let i = taskStartHours; i <= taskEndHours; i++) {\n        let partitioningElem = tasksPartitioningStructure.find(\n          (item) => item.hour === i\n        );\n\n        switch (i) {\n          case taskStartHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + (60 - taskStartDate.getMinutes());\n            break;\n\n          case taskEndHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + taskEndDate.getMinutes();\n            break;\n\n          default:\n            partitioningElem.occupied = 60;\n            break;\n        }\n      }\n    }\n  });\n\n  return tasksPartitioningStructure;\n};\n\nexport const getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatTime } from \"../../helpers\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles.module.scss\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timerOn: false,\n      isPause: false,\n      isResumed: false,\n      startTime: 0,\n      time: 0\n    };\n\n    this.timerID = null;\n  }\n\n  componentDidMount() {\n    const { startTime } = this.props;\n\n    if (startTime !== 0) {\n      this.startTimerWithStartDate(startTime);\n    }\n  }\n\n  runTimer = () => {\n    this.timerID = setInterval(() => {\n      this.setState({\n        time: Date.now() - this.state.startTime\n      });\n    }, 100);\n  };\n\n  startTimerWithStartDate = (startTime) => {\n    this.setState({\n      timerOn: true,\n      isResumed: false,\n      startTime: startTime\n    });\n\n    this.runTimer();\n  };\n\n  startTimer = (resumed) => {\n    const { onTimerFirstStart } = this.props;\n\n    this.setState({\n      timerOn: true,\n      isResumed: !!resumed,\n      startTime: Date.now() - this.state.time\n    });\n\n    this.runTimer();\n\n    if (resumed === false) {\n      if (typeof onTimerFirstStart === \"function\") {\n        onTimerFirstStart({\n          startTime: Date.now()\n        });\n      }\n    }\n  };\n\n  pauseTimer = () => {\n    this.setState({\n      timerOn: false,\n      isPause: true\n    });\n\n    clearInterval(this.timerID);\n  };\n\n  resumeTimer = () => {\n    this.startTimer(true);\n  };\n\n  stopTimer = () => {\n    const { time, startTime } = this.state;\n    const { onTimerStop, shouldTimerContinue } = this.props;\n\n    this.pauseTimer();\n\n    if (typeof onTimerStop === \"function\") {\n      /* define a timer management method that will be passed to the parent handler,\n      so that it can call it after its actions */\n      let timerMethodToPass = shouldTimerContinue\n        ? this.resumeTimer\n        : this.resetTimer;\n\n      onTimerStop(\n        {\n          id: Date.now(),\n          startTime,\n          endTime: time + startTime\n        },\n        timerMethodToPass\n      );\n    } else {\n      this.resetTimer();\n    }\n  };\n\n  resetTimer = () => {\n    clearInterval(this.timerID);\n\n    this.setState({\n      timerOn: false,\n      isPause: false,\n      isResumed: false,\n      time: 0,\n      startTime: 0\n    });\n  };\n\n  render() {\n    const { time, timerOn, isPause, isResumed } = this.state;\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item xs={12}>\n          <div className={styles.timerWrap}>\n            {formatTime(time, false, true)}\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          {timerOn ? (\n            isResumed ? (\n              <Grid container justify={\"center\"} spacing={16}>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color={\"secondary\"}\n                    onClick={this.stopTimer}\n                  >\n                    Stop\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} onClick={this.resetTimer}>\n                    Reset timer\n                  </Button>\n                </Grid>\n              </Grid>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color={\"secondary\"}\n                onClick={this.stopTimer}\n              >\n                Stop\n              </Button>\n            )\n          ) : isPause ? (\n            <Grid container justify={\"center\"} spacing={16}>\n              <Grid item>\n                <Button\n                  variant={\"contained\"}\n                  color={\"secondary\"}\n                  onClick={this.stopTimer}\n                >\n                  Stop\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant={\"contained\"}\n                  color={\"primary\"}\n                  onClick={this.resumeTimer}\n                >\n                  Resume\n                </Button>\n              </Grid>\n            </Grid>\n          ) : (\n            <Button\n              variant={\"contained\"}\n              color={\"primary\"}\n              onClick={() => this.startTimer(false)}\n            >\n              Start\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nTimer.propTypes = {\n  startTime: PropTypes.number,\n  onTimerFirstStart: PropTypes.func,\n  onTimerStop: PropTypes.func,\n  shouldTimerContinue: PropTypes.bool\n};\n\nTimer.defaultProps = {\n  startTime: 0,\n  shouldTimerContinue: false\n};\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ErrorDialog from \"components/ErrorDialog/index\";\nimport Timer from \"components/Timer/index\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"./styles\";\n\nclass TaskAddPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskName: \"\",\n      isShowErrorDialog: false\n    };\n  }\n\n  handleChangeTaskName = (e) => {\n    this.setState({\n      taskName: e.target.value\n    });\n  };\n\n  handleCloseErrorDialog = () => {\n    this.setState({\n      isShowErrorDialog: false\n    });\n  };\n\n  handleFirstStartTimer = (params) => {\n    const { onFirstStartTasksTimer } = this.props;\n\n    onFirstStartTasksTimer(params.startTime);\n  };\n\n  handleStopTimer = (params, timerControlMethod) => {\n    const { taskName } = this.state;\n    const { onAddTask, onEndTasksTimer } = this.props;\n\n    if (!taskName) {\n      this.setState({\n        isShowErrorDialog: true\n      });\n    } else {\n      timerControlMethod();\n      onEndTasksTimer();\n\n      onAddTask({\n        name: taskName,\n        ...params\n      });\n\n      this.setState({\n        taskName: \"\"\n      });\n    }\n  };\n\n  render() {\n    const { taskName, isShowErrorDialog } = this.state;\n    const { startTimerDate, classes } = this.props;\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12} classes={{ item: classes.taskInputWrap }}>\n          <Input\n            value={taskName}\n            onChange={this.handleChangeTaskName}\n            placeholder={\"Name of your Task\"}\n            classes={{ input: classes.taskNameInput }}\n          />\n          <ErrorDialog\n            id={\"task-name-error\"}\n            open={isShowErrorDialog}\n            title={\"Empty task name\"}\n            onClose={this.handleCloseErrorDialog}\n          >\n            You are trying close your task without name, enter the title and try\n            again\n          </ErrorDialog>\n        </Grid>\n        <Grid item xs={12} classes={{ item: classes.timerWrap }}>\n          <Timer\n            startTime={startTimerDate}\n            onTimerFirstStart={this.handleFirstStartTimer}\n            onTimerStop={this.handleStopTimer}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nTaskAddPanel.propTypes = {\n  startTimerDate: PropTypes.number,\n  onFirstStartTasksTimer: PropTypes.func.isRequired,\n  onAddTask: PropTypes.func.isRequired,\n  onEndTasksTimer: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(TaskAddPanel);\n","export default (theme) => ({\r\n  taskInputWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  taskNameInput: {\r\n    width: \"270px\",\r\n    color: \"#3e50c7\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\"\r\n  },\r\n  timerWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { formatTime } from \"helpers\";\n\nimport { withStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nconst TaskList = (props) => {\n  const { tasksList, classes, onDeleteTask } = props;\n\n  return (\n    <div className={classes.tableWrap}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow classes={{ root: classes.headRow }}>\n            <TableCell classes={{ head: classes.headCell }}>№</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Task</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time start\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Time end</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time spend\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Info</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tasksList.length > 0 ? (\n            tasksList.map((task, index) => (\n              <TableRow key={task.id} className={classes.bodyRow}>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {index + 1}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {task.name}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.startTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.endTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.spendTime)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  <Button\n                    variant={\"contained\"}\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    component={Link}\n                    to={`/tasks/${task.id}`}\n                  >\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant={\"contained\"}\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    onClick={() => onDeleteTask(task.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow className={classes.bodyRow}>\n              <TableCell\n                colSpan={7}\n                align={\"center\"}\n                classes={{ body: classes.noTaskCell }}\n              >\n                No tasks for show\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  tasksList: PropTypes.array.isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\n\nTaskList.defaultProps = {\n  tasks: []\n};\n\nexport default withStyles(styles)(TaskList);\n","export default (theme) => ({\n  tableWrap: {\n    display: \"block\",\n    overflowX: \"auto\",\n    padding: \"0 20px\"\n  },\n  table: {\n    width: \"100%\"\n  },\n  headRow: {\n    backgroundColor: theme.palette.common.white\n  },\n  headCell: {\n    fontSize: \"14px\",\n    color: \"#9d9d9d\"\n  },\n  bodyRow: {\n    backgroundColor: \"#eaf6ff\"\n  },\n  bodyCell: {\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    fontWeight: \"500\",\n    color: \"#3e50c7\"\n  },\n  noTaskCell: {\n    paddingTop: \"20px\",\n    paddingBottom: \"20px\"\n  },\n  btn: {\n    backgroundColor: theme.palette.common.white,\n    borderRadius: \"2px\",\n    \"&:hover\": {\n      backgroundColor: \"#f5f5f5\"\n    }\n  },\n  btnLabel: {\n    fontWeight: \"normal\",\n    color: \"#3e50c7\"\n  }\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend\n} from \"recharts\";\n\nimport { tasksHoursPartitioning } from \"helpers\";\n\nclass TaskChart extends Component {\n  render() {\n    const { tasks } = this.props;\n\n    return (\n      <ResponsiveContainer height={300}>\n        <BarChart\n          data={tasksHoursPartitioning(tasks)}\n          margin={{ top: 30, right: 40, left: 10, bottom: 10 }}\n        >\n          <CartesianGrid strokeDasharray={\"3 3\"} />\n          <XAxis dateKey={\"hour\"} />\n          <YAxis />\n          <Legend />\n          <Bar\n            dataKey={\"occupied\"}\n            name={\"Minutes in this hours\"}\n            fill={\"#8884d8\"}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nTaskChart.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\n\nexport default connect((state) => {\n  return {\n    tasks: state.tasks.items\n  };\n})(TaskChart);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { loadSavedTasks, addTask, deleteTask } from \"domain/task\";\nimport { saveTimerDataInLS, resetTimerDataInLS } from \"domain/timer\";\n\nimport TaskAddPanel from \"components/TaskAddPanel/index\";\nimport TaskList from \"components/TaskList/index\";\nimport TaskChart from \"components/TaskChart/index\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport styles from \"./styles\";\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.loadSavedTasks();\n  }\n\n  handleChangeTab = (e, value) => {\n    const { history } = this.props;\n    history.push(value);\n  };\n\n  render() {\n    const {\n      location,\n      startTimerDate,\n      tasks,\n      classes,\n      saveTimerDataInLS,\n      resetTimerDataInLS,\n      addTask,\n      deleteTask\n    } = this.props;\n\n    return (\n      <div className={classes.layout}>\n        <Paper>\n          <Grid container spacing={32} justify={\"center\"}>\n            <Grid item xs={12}>\n              <TaskAddPanel\n                startTimerDate={startTimerDate}\n                onFirstStartTasksTimer={saveTimerDataInLS}\n                onEndTasksTimer={resetTimerDataInLS}\n                onAddTask={addTask}\n              />\n            </Grid>\n            <Grid item xs={12} classes={{ item: classes.taskListWrap }}>\n              <AppBar position={\"static\"}>\n                <Tabs\n                  value={location.pathname === \"/chart\" ? \"chart\" : \"tasks\"}\n                  centered\n                  variant=\"fullWidth\"\n                  onChange={this.handleChangeTab}\n                >\n                  <Tab label=\"Task Log\" value={\"tasks\"} />\n                  <Tab label=\"Tasks Chart\" value={\"chart\"} />\n                </Tabs>\n              </AppBar>\n              <div className={classes.tabsWrap}>\n                <Switch>\n                  <Route\n                    exact\n                    path={\"/chart\"}\n                    render={(props) => <TaskChart {...props} />}\n                  />\n                  <Route\n                    exact\n                    path={\"/tasks\"}\n                    render={(props) => (\n                      <TaskList\n                        {...props}\n                        tasksList={tasks}\n                        onDeleteTask={deleteTask}\n                      />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object,\n  startTimerDate: PropTypes.number,\n  tasks: PropTypes.array.isRequired,\n  classes: PropTypes.object,\n  saveTimerDataInLS: PropTypes.func.isRequired,\n  resetTimerDataInLS: PropTypes.func.isRequired,\n  loadSavedTasks: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired\n};\n\nexport default compose(\n  connect(\n    (state) => {\n      return {\n        startTimerDate: state.timer.startTime,\n        tasks: state.tasks.items\n      };\n    },\n    {\n      saveTimerDataInLS,\n      resetTimerDataInLS,\n      loadSavedTasks,\n      addTask,\n      deleteTask\n    }\n  ),\n  withStyles(styles)\n)(Home);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  },\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  tabsWrap: {\r\n    padding: \"20px 0\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loadSavedTasks } from \"domain/task\";\nimport { formatTime } from \"helpers\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nclass Task extends Component {\n  componentDidMount() {\n    this.props.loadSavedTasks();\n  }\n\n  render() {\n    const { match, task, classes } = this.props;\n\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper}>\n          {task[\"id\"] ? (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={32}\n                alignItems={\"baseline\"}\n                justify={\"center\"}\n              >\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"left\">\n                    {task[\"name\"]}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"right\">\n                    {task[\"id\"]}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task start time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"startTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task end time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"endTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Spend Time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\" align=\"right\">\n                    {formatTime(task[\"spendTime\"])}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <Typography variant=\"h5\" align=\"right\">\n              {`Sorry, but task with ID: ${\n                match.params[\"id\"]\n              } - does not exist`}\n            </Typography>\n          )}\n          <div className={classes.homeBtn}>\n            <Button\n              variant={\"contained\"}\n              color={\"primary\"}\n              component={Link}\n              to={\"/\"}\n            >\n              Go to Home\n            </Button>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  match: PropTypes.object,\n  classes: PropTypes.object,\n  loadSavedTasks: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nexport default compose(\n  connect(\n    (state, ownProps) => {\n      return {\n        task: state.tasks.items.reduce((prev, task) => {\n          return +ownProps.match.params[\"id\"] === task.id\n            ? { ...prev, ...task }\n            : prev;\n        }, {})\n      };\n    },\n    {\n      loadSavedTasks\n    }\n  ),\n  withStyles(styles)\n)(Task);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    padding: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n      marginTop: theme.spacing.unit * 6,\r\n      marginBottom: theme.spacing.unit * 6,\r\n      padding: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  divider: {\r\n    margin: \"15px 0 25px 0\"\r\n  },\r\n  homeBtn: {\r\n    marginTop: \"15px\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\n\nimport styles from \"./styles\";\n\nconst NoMatch = (props) => {\n  const { location, classes } = props;\n  return (\n    <div className={classes.layout}>\n      <Paper>\n        <Grid container spacing={24} justify={\"center\"}>\n          <Grid item xs={12}>\n            <Typography align={\"center\"} color={\"textPrimary\"} variant={\"h5\"}>\n              {location.state && location.state.errorText\n                ? location.state.errorText\n                : `No matches for this location: ${location.pathname}`}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography align={\"center\"}>\n              <Button\n                color={\"primary\"}\n                variant={\"contained\"}\n                component={Link}\n                to={\"/\"}\n              >\n                Go to Home\n              </Button>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nNoMatch.propTypes = {\n  location: PropTypes.object,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(NoMatch);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\n\nimport Home from \"pages/Home/index\";\nimport Task from \"pages/Task/index\";\nimport NoMatch from \"pages/NoMatch/index\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport styles from \"./styles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <Switch>\n          <Route exact path={\"/\"} render={() => <Redirect to={\"/tasks\"} />} />\n          <Route exact path={\"/tasks/:id\"} component={Task} />\n          <Route exact path={\"/tasks\"} component={Home} />\n          <Route exact path={\"/chart\"} component={Home} />\n          <Route component={NoMatch} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default (theme) => ({\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./domain/store\";\r\nimport App from \"./pages/App/index\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename=\"/task-timer\">\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { combineReducers } from \"redux\";\n\nimport * as timer from \"./timer\";\nimport * as task from \"./task\";\n\nexport default function createReducer() {\n  return combineReducers({\n    ...timer.reducer,\n    ...task.reducer\n  });\n}\n"],"sourceRoot":""}