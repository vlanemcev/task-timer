{"version":3,"sources":["components/Timer/styles.module.scss","domain/constants.js","domain/timer/actions.js","domain/timer/reducer.js","domain/timer/saga.js","domain/timer/selectors.js","domain/task/actions.js","domain/task/reducer.js","domain/task/saga.js","domain/task/selectors.js","domain/sagas.js","domain/store.js","components/ErrorDialog/index.js","helpers/index.js","components/Timer/index.js","components/TaskAddPanel/index.js","components/TaskAddPanel/styles.js","components/TaskList/index.js","components/TaskList/styles.js","components/TaskChart/index.js","pages/Home/index.js","pages/Home/styles.js","pages/Task/index.js","pages/Task/styles.js","pages/NoMatch/index.js","pages/NoMatch/styles.js","pages/App/index.js","pages/App/styles.js","serviceWorker.js","index.js","domain/reducers.js"],"names":["module","exports","timerWrap","POSTFIX","request","success","failure","LOAD_TIMER_DATA","SET_TIMER","RESET_TIMER","loadSavedTimerDataSuccess","payload","type","startTime","loadSavedTimerDataFailure","message","timerInitialState","meta","isLoading","isFromLS","reducer","timer","state","arguments","length","undefined","_ref","Object","objectWithoutProperties","objectSpread","failureText","loadTimerFromLS","setTimerDataInLS","watchRequestSavedTimerData","watchTimersSaga","regenerator_default","a","wrap","_context","prev","next","call","JSON","parse","localStorage","getItem","sent","put","t0","stop","_marked","_context2","select","getTimerSelector","setItem","stringify","_marked2","_context3","takeEvery","_marked3","_context4","_marked4","LOAD_TASKS","ADD_TASK","ADD_TASKS","DELETE_TASK","DELETE_ALL_TASKS","loadSavedTasks","loadSavedTasksSuccess","tasks","loadSavedTasksFailure","tasksInitialState","items","task","spendTime","endTime","concat","toConsumableArray","filter","id","loadTasksFromLS","setTasksInLS","watchRequestSavedTasks","watchTasksSaga","saga_marked","getTasksSelector","saga_marked2","saga_marked3","saga_marked4","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","apply","composeEnhancers","compose","ErrorDialog","props","title","isOpen","children","onClose","react_default","createElement","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","onClick","color","autoFocus","formatTime","time","hrsInLocal","showMSec","cutMsec","Math","floor","sec","cutSec","min","hrs","hrsLoc","Date","getTimezoneOffset","tasksHoursPartitioning","tasksPartitioningStructure","hour","occupied","forEach","taskStartDate","taskStartHours","getHours","taskEndDate","taskEndHours","partitioningElem","find","item","_loop","i","getMinutes","getRandomInRange","max","random","generateTasks","generatedTasksArray","timeIntervals","numberOfTasks","randomStartHour","randomStartMin","randomStartSec","setHours","nextStartTime","push","interval","name","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","runTimer","timerID","setInterval","setState","now","startTimerWithStartDate","timerOn","isResumed","startTimer","resumed","onTimerFirstStart","pauseTimer","isPause","clearInterval","resumeTimer","stopTimer","_this$state","_this$props","onTimerStop","shouldTimerContinue","timerMethodToPass","resetTimer","_this2","_this$state2","Grid_default","container","spacing","xs","className","styles","justify","variant","Component","defaultProps","TaskAddPanel","handleChangeTaskName","e","taskName","target","value","handleCloseErrorDialog","isShowErrorDialog","handleFirstStartTimer","params","onFirstStartTasksTimer","handleStopTimer","timerControlMethod","onAddTask","onEndTasksTimer","_this$props2","startTimerDate","classes","taskInputWrap","Input_default","onChange","placeholder","input","taskNameInput","components_ErrorDialog","components_Timer","withStyles","theme","textAlign","width","fontWeight","TaskList","tasksList","onDeleteTask","tableWrap","Table_default","table","TableHead_default","TableRow_default","root","headRow","TableCell_default","head","headCell","TableBody_default","map","index","key","bodyRow","body","bodyCell","contained","btn","label","btnLabel","component","Link","to","colSpan","align","noTaskCell","display","overflowX","padding","backgroundColor","palette","common","white","fontSize","paddingTop","paddingBottom","borderRadius","&:hover","TaskChart","handleGenerateTasks","deleteAllTasks","addTasks","generatedTasks","Fragment","es6","height","data","margin","top","right","left","bottom","strokeDasharray","dateKey","dataKey","fill","style","connect","Home","handleChangeTab","history","loadSavedTimerData","location","saveTimerDataInLS","resetTimerDataInLS","addTask","deleteTask","layout","Paper_default","components_TaskAddPanel","taskListWrap","AppBar_default","position","Tabs_default","pathname","centered","Tab_default","tabsWrap","react_router","exact","path","render","components_TaskList","assign","_layout","marginLeft","unit","marginRight","defineProperty","breakpoints","up","Task","match","paper","alignItems","Typography_default","Divider_default","divider","homeBtn","ownProps","reduce","marginTop","marginBottom","errorText","index_es","App","CssBaseline_default","NoMatch","Boolean","window","hostname","store","createStore","combineReducers","run","configureStore","ReactDOM","es","react_router_dom","basename","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8f847a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrap\":\"styles_timerWrap__gO9r2\"};","export const POSTFIX = {\n  request: \"/REQUEST\",\n  success: \"/SUCCESS\",\n  failure: \"/FAILURE\"\n};\n","import { POSTFIX } from \"domain/constants\";\r\n\r\nexport const LOAD_TIMER_DATA = \"LOAD_TIMER_DATA\";\r\nexport const SET_TIMER = \"SET_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\n\r\nexport const loadSavedTimerData = () => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.request\r\n  };\r\n};\r\n\r\nexport const loadSavedTimerDataSuccess = (payload) => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.success,\r\n    startTime: payload\r\n  };\r\n};\r\n\r\nexport const loadSavedTimerDataFailure = (message) => {\r\n  return {\r\n    type: LOAD_TIMER_DATA + POSTFIX.failure,\r\n    message\r\n  };\r\n};\r\n\r\nexport const saveTimerDataInLS = (startTime) => {\r\n  return {\r\n    type: SET_TIMER,\r\n    startTime\r\n  };\r\n};\r\n\r\nexport const resetTimerDataInLS = () => {\r\n  return {\r\n    type: RESET_TIMER\r\n  };\r\n};\r\n","import { POSTFIX } from \"domain/constants\";\r\nimport { LOAD_TIMER_DATA, SET_TIMER, RESET_TIMER } from \"./actions\";\r\n\r\nconst timerInitialState = {\r\n  meta: {\r\n    isLoading: false,\r\n    isFromLS: false\r\n  },\r\n  startTime: 0\r\n};\r\n\r\nexport const reducer = {\r\n  timer(state = timerInitialState, { type, ...payload }) {\r\n    switch (type) {\r\n      case LOAD_TIMER_DATA + POSTFIX.request:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: true\r\n          }\r\n        };\r\n\r\n      case LOAD_TIMER_DATA + POSTFIX.success: {\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: true\r\n          },\r\n          startTime: payload.startTime\r\n        };\r\n      }\r\n\r\n      case LOAD_TIMER_DATA + POSTFIX.failure:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: false,\r\n            failureText: payload.message\r\n          }\r\n        };\r\n\r\n      case SET_TIMER:\r\n        return {\r\n          ...state,\r\n          startTime: payload.startTime\r\n        };\r\n\r\n      case RESET_TIMER:\r\n        return {\r\n          ...state,\r\n          startTime: 0\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport { POSTFIX } from \"domain/constants\";\r\n\r\n// import timer actions\r\nimport {\r\n  LOAD_TIMER_DATA,\r\n  SET_TIMER,\r\n  RESET_TIMER,\r\n  loadSavedTimerDataSuccess,\r\n  loadSavedTimerDataFailure,\r\n  getTimerSelector\r\n} from \"domain/timer\";\r\n\r\n// sagas functions that will be called when the appropriate action is executed\r\nexport function* loadTimerFromLS() {\r\n  try {\r\n    const timer = yield call(JSON.parse, [localStorage.getItem(\"timer\")]);\r\n    yield put(loadSavedTimerDataSuccess(timer));\r\n  } catch (e) {\r\n    yield put(loadSavedTimerDataFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* setTimerDataInLS() {\r\n  const timer = yield select(getTimerSelector);\r\n  yield localStorage.setItem(\"timer\", JSON.stringify(timer));\r\n  yield put({ type: \"LS_TIMER_UPDATED\" });\r\n}\r\n\r\n// sagas action watchers\r\nexport function* watchRequestSavedTimerData() {\r\n  yield takeEvery(LOAD_TIMER_DATA + POSTFIX.request, loadTimerFromLS);\r\n}\r\n\r\nexport function* watchTimersSaga() {\r\n  yield takeEvery([SET_TIMER, RESET_TIMER], setTimerDataInLS);\r\n}\r\n","// selector to get timer date from store\r\nexport const getTimerSelector = (state) => state.timer.startTime;\r\n","import { POSTFIX } from \"domain/constants\";\r\n\r\nexport const LOAD_TASKS = \"LOAD_TASKS\";\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const ADD_TASKS = \"ADD_TASKS\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const DELETE_ALL_TASKS = \"DELETE_ALL_TASK\";\r\n\r\nexport const loadSavedTasks = () => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.request\r\n  };\r\n};\r\n\r\nexport const loadSavedTasksSuccess = (tasks) => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.success,\r\n    tasks\r\n  };\r\n};\r\n\r\nexport const loadSavedTasksFailure = (message) => {\r\n  return {\r\n    type: LOAD_TASKS + POSTFIX.failure,\r\n    message\r\n  };\r\n};\r\n\r\nexport const addTask = (payload) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    ...payload\r\n  };\r\n};\r\n\r\nexport const addTasks = (payload) => {\r\n  return {\r\n    type: ADD_TASKS,\r\n    items: payload\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id\r\n  };\r\n};\r\n\r\nexport const deleteAllTasks = () => {\r\n  return {\r\n    type: DELETE_ALL_TASKS\r\n  };\r\n};\r\n","import { POSTFIX } from \"domain/constants\";\r\nimport {\r\n  ADD_TASK,\r\n  ADD_TASKS,\r\n  DELETE_TASK,\r\n  DELETE_ALL_TASKS,\r\n  LOAD_TASKS\r\n} from \"./actions\";\r\n\r\nconst tasksInitialState = {\r\n  meta: {\r\n    isLoading: false,\r\n    isFromLS: false\r\n  },\r\n  items: []\r\n};\r\n\r\nexport const reducer = {\r\n  tasks(state = tasksInitialState, { type, ...payload }) {\r\n    switch (type) {\r\n      case LOAD_TASKS + POSTFIX.request:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: true\r\n          }\r\n        };\r\n\r\n      case LOAD_TASKS + POSTFIX.success: {\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: true\r\n          },\r\n          items: payload.tasks\r\n        };\r\n      }\r\n\r\n      case LOAD_TASKS + POSTFIX.failure:\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            isLoading: false,\r\n            isFromLS: false,\r\n            failureText: payload.message\r\n          }\r\n        };\r\n\r\n      case ADD_TASK:\r\n        const task = {\r\n          ...payload,\r\n          spendTime: payload.endTime - payload.startTime\r\n        };\r\n\r\n        return {\r\n          ...state,\r\n          items: [...state.items, task]\r\n        };\r\n\r\n      case ADD_TASKS:\r\n        return {\r\n          ...state,\r\n          items: [...state.items, ...payload.items]\r\n        };\r\n\r\n      case DELETE_TASK:\r\n        return {\r\n          ...state,\r\n          items: state.items.filter((task) => task.id !== payload.id)\r\n        };\r\n\r\n      case DELETE_ALL_TASKS:\r\n        return {\r\n          ...state,\r\n          items: []\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport { POSTFIX } from \"domain/constants\";\r\n\r\n// import task actions\r\nimport {\r\n  LOAD_TASKS,\r\n  ADD_TASK,\r\n  ADD_TASKS,\r\n  DELETE_TASK,\r\n  DELETE_ALL_TASKS,\r\n  loadSavedTasksSuccess,\r\n  loadSavedTasksFailure,\r\n  getTasksSelector\r\n} from \"domain/task\";\r\n\r\n// sagas functions that will be called when the appropriate action is executed\r\nexport function* loadTasksFromLS() {\r\n  try {\r\n    const tasks = yield call(JSON.parse, [localStorage.getItem(\"tasks\")]);\r\n    yield put(loadSavedTasksSuccess(tasks));\r\n  } catch (e) {\r\n    yield put(loadSavedTasksFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* setTasksInLS() {\r\n  const tasks = yield select(getTasksSelector);\r\n  yield localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  yield put({ type: \"LS_TASKS_UPDATED\" });\r\n}\r\n\r\n// sagas action watchers\r\nexport function* watchRequestSavedTasks() {\r\n  yield takeEvery(LOAD_TASKS + POSTFIX.request, loadTasksFromLS);\r\n}\r\n\r\nexport function* watchTasksSaga() {\r\n  yield takeEvery(\r\n    [ADD_TASK, ADD_TASKS, DELETE_TASK, DELETE_ALL_TASKS],\r\n    setTasksInLS\r\n  );\r\n}\r\n","// selector to get all tasks from store\r\nexport const getTasksSelector = (state) => state.tasks.items;\r\n","import { all } from \"redux-saga/effects\";\r\n\r\n// import task sagas\r\nimport { watchRequestSavedTasks, watchTasksSaga } from \"domain/task\";\r\n\r\n// import timer sagas\r\nimport { watchRequestSavedTimerData, watchTimersSaga } from \"domain/timer\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchRequestSavedTimerData(),\r\n    watchRequestSavedTasks(),\r\n    watchTasksSaga(),\r\n    watchTimersSaga()\r\n  ]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\n// import our sagas\r\nimport rootSaga from \"domain/sagas\";\r\n\r\n// created sage middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\nconst enhancers = [applyMiddleware(...middlewares)];\r\n\r\n// If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(createReducer(), composeEnhancers(...enhancers));\r\n\r\n  // run sagas middleware\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material UI\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ErrorDialog = (props) => {\n  const { id, title, isOpen, children, onClose } = props;\n\n  return (\n    <Dialog\n      open={isOpen}\n      aria-labelledby={`${id}-dialog-title`}\n      aria-describedby={`${id}-dialog-description`}\n    >\n      <DialogTitle id={`${id}-dialog-title`}>{title}</DialogTitle>\n      <DialogContent id={`${id}-dialog-description`}>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nErrorDialog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node\n};\n\nexport default ErrorDialog;\n","export const formatTime = (time, hrsInLocal, showMSec = false) => {\n  const cutMsec = Math.floor((time % 1000) / 100);\n  const sec = time / 1000;\n  const cutSec = Math.floor(sec % 60);\n  const min = Math.floor((sec % 3600) / 60);\n  const hrs = Math.floor((sec / 3600) % 24);\n  const hrsLoc = Math.floor(\n    (hrs + -(new Date().getTimezoneOffset() / 60)) % 24\n  );\n\n  // prettier-ignore\n  if (hrsInLocal) {\n    return showMSec\n      ? `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n      : `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n  }\n\n  // prettier-ignore\n  return showMSec\n    ? `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n    : `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n};\n\nexport const tasksHoursPartitioning = (tasks = []) => {\n  let tasksPartitioningStructure = [\n    { hour: 0, occupied: 0 },\n    { hour: 1, occupied: 0 },\n    { hour: 2, occupied: 0 },\n    { hour: 3, occupied: 0 },\n    { hour: 4, occupied: 0 },\n    { hour: 5, occupied: 0 },\n    { hour: 6, occupied: 0 },\n    { hour: 7, occupied: 0 },\n    { hour: 8, occupied: 0 },\n    { hour: 9, occupied: 0 },\n    { hour: 10, occupied: 0 },\n    { hour: 11, occupied: 0 },\n    { hour: 12, occupied: 0 },\n    { hour: 13, occupied: 0 },\n    { hour: 14, occupied: 0 },\n    { hour: 15, occupied: 0 },\n    { hour: 16, occupied: 0 },\n    { hour: 17, occupied: 0 },\n    { hour: 18, occupied: 0 },\n    { hour: 19, occupied: 0 },\n    { hour: 20, occupied: 0 },\n    { hour: 21, occupied: 0 },\n    { hour: 22, occupied: 0 },\n    { hour: 23, occupied: 0 }\n  ];\n\n  tasks.forEach((task) => {\n    const taskStartDate = new Date(task.startTime);\n    const taskStartHours = taskStartDate.getHours();\n    const taskEndDate = new Date(task.endTime);\n    const taskEndHours = taskEndDate.getHours();\n    const timeDifferenceHours = taskEndHours - taskStartHours;\n\n    if (timeDifferenceHours === 0) {\n      let partitioningElem = tasksPartitioningStructure.find(\n        (item) => item.hour === taskStartHours\n      );\n\n      partitioningElem.occupied =\n        partitioningElem.occupied + Math.floor(task.spendTime / 1000 / 60);\n    } else {\n      for (let i = taskStartHours; i <= taskEndHours; i++) {\n        let partitioningElem = tasksPartitioningStructure.find(\n          (item) => item.hour === i\n        );\n\n        switch (i) {\n          case taskStartHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + (60 - taskStartDate.getMinutes());\n            break;\n\n          case taskEndHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + taskEndDate.getMinutes();\n            break;\n\n          default:\n            partitioningElem.occupied = 60;\n            break;\n        }\n      }\n    }\n  });\n\n  return tasksPartitioningStructure;\n};\n\nexport const getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const generateTasks = () => {\n  let generatedTasksArray = [];\n  let timeIntervals = [];\n\n  const numberOfTasks = getRandomInRange(10, 15);\n  const randomStartHour = getRandomInRange(0, 3);\n  const randomStartMin = getRandomInRange(1, 59);\n  const randomStartSec = getRandomInRange(1, 59);\n\n  let startTime = new Date().setHours(\n    randomStartHour,\n    randomStartMin,\n    randomStartSec\n  );\n\n  while (timeIntervals.length < numberOfTasks) {\n    let randomSpendTimeInMin = getRandomInRange(10, 90);\n    let endTime = startTime + randomSpendTimeInMin * 60 * 1000;\n\n    let pauseBetweenTasks = getRandomInRange(5, 15);\n\n    let nextStartTime = endTime + pauseBetweenTasks * 60 * 1000;\n\n    if (nextStartTime < new Date().setHours(23, 60, 0)) {\n      timeIntervals.push({ startTime, endTime });\n      startTime = nextStartTime;\n    }\n  }\n\n  timeIntervals.forEach((interval, i) => {\n    generatedTasksArray.push({\n      id: i + 1,\n      name: `generated task ${i + 1}`,\n      startTime: interval.startTime,\n      endTime: interval.endTime,\n      spendTime: interval.endTime - interval.startTime\n    });\n  });\n\n  return generatedTasksArray;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// helpers\nimport { formatTime } from \"helpers\";\n\n// material UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles.module.scss\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timerOn: false,\n      isPause: false,\n      isResumed: false,\n      startTime: 0,\n      time: 0\n    };\n\n    this.timerID = null;\n  }\n\n  componentDidMount() {\n    const { startTime } = this.props;\n\n    if (startTime !== 0) {\n      this.startTimerWithStartDate(startTime);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  runTimer = () => {\n    this.timerID = setInterval(() => {\n      this.setState((state) => ({ time: Date.now() - state.startTime }));\n    }, 100);\n  };\n\n  startTimerWithStartDate = (startTime) => {\n    this.setState({\n      timerOn: true,\n      isResumed: false,\n      startTime: startTime\n    });\n\n    this.runTimer();\n  };\n\n  startTimer = (resumed) => {\n    const { onTimerFirstStart } = this.props;\n\n    this.setState((state) => ({\n      timerOn: true,\n      isResumed: !!resumed,\n      startTime: Date.now() - state.time\n    }));\n\n    this.runTimer();\n\n    if (resumed === false) {\n      if (typeof onTimerFirstStart === \"function\") {\n        onTimerFirstStart({\n          startTime: Date.now()\n        });\n      }\n    }\n  };\n\n  pauseTimer = () => {\n    this.setState({\n      timerOn: false,\n      isPause: true\n    });\n\n    clearInterval(this.timerID);\n  };\n\n  resumeTimer = () => {\n    this.startTimer(true);\n  };\n\n  stopTimer = () => {\n    const { time, startTime } = this.state;\n    const { onTimerStop, shouldTimerContinue } = this.props;\n\n    this.pauseTimer();\n\n    if (typeof onTimerStop === \"function\") {\n      /* define a timer management method that will be passed to the parent handler,\n      so that it can call it after its actions */\n      let timerMethodToPass = shouldTimerContinue\n        ? this.resumeTimer\n        : this.resetTimer;\n\n      onTimerStop(\n        {\n          id: Date.now(),\n          startTime,\n          endTime: time + startTime\n        },\n        timerMethodToPass\n      );\n    } else {\n      this.resetTimer();\n    }\n  };\n\n  resetTimer = () => {\n    clearInterval(this.timerID);\n\n    this.setState({\n      timerOn: false,\n      isPause: false,\n      isResumed: false,\n      time: 0,\n      startTime: 0\n    });\n  };\n\n  render() {\n    const { time, timerOn, isPause, isResumed } = this.state;\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item xs={12}>\n          <div className={styles.timerWrap}>\n            {formatTime(time, false, true)}\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          {timerOn ? (\n            isResumed ? (\n              <Grid container justify=\"center\" spacing={16}>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.stopTimer}\n                  >\n                    Stop\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"contained\" onClick={this.resetTimer}>\n                    Reset timer\n                  </Button>\n                </Grid>\n              </Grid>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.stopTimer}\n              >\n                Stop\n              </Button>\n            )\n          ) : isPause ? (\n            <Grid container justify=\"center\" spacing={16}>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={this.stopTimer}\n                >\n                  Stop\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.resumeTimer}\n                >\n                  Resume\n                </Button>\n              </Grid>\n            </Grid>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.startTimer(false)}\n            >\n              Start\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nTimer.propTypes = {\n  startTime: PropTypes.number,\n  onTimerFirstStart: PropTypes.func,\n  onTimerStop: PropTypes.func,\n  shouldTimerContinue: PropTypes.bool\n};\n\nTimer.defaultProps = {\n  startTime: 0,\n  shouldTimerContinue: false\n};\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// application components\nimport ErrorDialog from \"components/ErrorDialog\";\nimport Timer from \"components/Timer\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\n\nimport styles from \"./styles\";\n\nclass TaskAddPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskName: \"\",\n      isShowErrorDialog: false\n    };\n  }\n\n  handleChangeTaskName = (e) => {\n    this.setState({\n      taskName: e.target.value\n    });\n  };\n\n  handleCloseErrorDialog = () => {\n    this.setState({\n      isShowErrorDialog: false\n    });\n  };\n\n  handleFirstStartTimer = (params) => {\n    const { onFirstStartTasksTimer } = this.props;\n\n    onFirstStartTasksTimer(params.startTime);\n  };\n\n  handleStopTimer = (params, timerControlMethod) => {\n    const { taskName } = this.state;\n    const { onAddTask, onEndTasksTimer } = this.props;\n\n    if (!taskName) {\n      this.setState({\n        isShowErrorDialog: true\n      });\n    } else {\n      timerControlMethod();\n      onEndTasksTimer();\n\n      onAddTask({\n        name: taskName,\n        ...params\n      });\n\n      this.setState({\n        taskName: \"\"\n      });\n    }\n  };\n\n  render() {\n    const { taskName, isShowErrorDialog } = this.state;\n    const { startTimerDate, classes } = this.props;\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12} classes={{ item: classes.taskInputWrap }}>\n          <Input\n            value={taskName}\n            onChange={this.handleChangeTaskName}\n            placeholder=\"Name of your Task\"\n            classes={{ input: classes.taskNameInput }}\n          />\n          <ErrorDialog\n            id=\"task-name-error\"\n            isOpen={isShowErrorDialog}\n            title=\"Empty task name\"\n            onClose={this.handleCloseErrorDialog}\n          >\n            You are trying close your task without name, enter the title and try\n            again\n          </ErrorDialog>\n        </Grid>\n        <Grid item xs={12} classes={{ item: classes.timerWrap }}>\n          <Timer\n            startTime={startTimerDate}\n            onTimerFirstStart={this.handleFirstStartTimer}\n            onTimerStop={this.handleStopTimer}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nTaskAddPanel.propTypes = {\n  startTimerDate: PropTypes.number,\n  onFirstStartTasksTimer: PropTypes.func.isRequired,\n  onAddTask: PropTypes.func.isRequired,\n  onEndTasksTimer: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(TaskAddPanel);\n","export default (theme) => ({\r\n  taskInputWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  taskNameInput: {\r\n    width: \"270px\",\r\n    color: \"#3e50c7\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\"\r\n  },\r\n  timerWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// helpers\nimport { formatTime } from \"helpers\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nconst TaskList = (props) => {\n  const { tasksList, classes, onDeleteTask } = props;\n\n  return (\n    <div className={classes.tableWrap}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow classes={{ root: classes.headRow }}>\n            <TableCell classes={{ head: classes.headCell }}>№</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Task</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time start\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Time end</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time spend\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Info</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tasksList.length > 0 ? (\n            tasksList.map((task, index) => (\n              <TableRow key={task.id} className={classes.bodyRow}>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {index + 1}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {task.name}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.startTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.endTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.spendTime)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  <Button\n                    variant=\"contained\"\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    component={Link}\n                    to={`/tasks/${task.id}`}\n                  >\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    onClick={() => onDeleteTask(task.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow className={classes.bodyRow}>\n              <TableCell\n                colSpan={7}\n                align=\"center\"\n                classes={{ body: classes.noTaskCell }}\n              >\n                No tasks for show\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  tasksList: PropTypes.array.isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\n\nTaskList.defaultProps = {\n  tasks: []\n};\n\nexport default withStyles(styles)(TaskList);\n","export default (theme) => ({\n  tableWrap: {\n    display: \"block\",\n    overflowX: \"auto\",\n    padding: \"0 20px\"\n  },\n  table: {\n    width: \"100%\"\n  },\n  headRow: {\n    backgroundColor: theme.palette.common.white\n  },\n  headCell: {\n    fontSize: \"14px\",\n    color: \"#9d9d9d\"\n  },\n  bodyRow: {\n    backgroundColor: \"#eaf6ff\"\n  },\n  bodyCell: {\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    fontWeight: \"500\",\n    color: \"#3e50c7\"\n  },\n  noTaskCell: {\n    paddingTop: \"20px\",\n    paddingBottom: \"20px\"\n  },\n  btn: {\n    backgroundColor: theme.palette.common.white,\n    borderRadius: \"2px\",\n    \"&:hover\": {\n      backgroundColor: \"#f5f5f5\"\n    }\n  },\n  btnLabel: {\n    fontWeight: \"normal\",\n    color: \"#3e50c7\"\n  }\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// action creators for tasks\nimport { deleteAllTasks, addTasks } from \"domain/task\";\n\n// helpers\nimport { generateTasks, tasksHoursPartitioning } from \"helpers\";\n\n// rechart components\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip\n} from \"recharts\";\n\n// material UI\nimport Button from \"@material-ui/core/Button\";\n\nclass TaskChart extends Component {\n  handleGenerateTasks = () => {\n    const { deleteAllTasks, addTasks } = this.props;\n    const generatedTasks = generateTasks();\n\n    deleteAllTasks();\n    addTasks(generatedTasks);\n  };\n\n  render() {\n    const { tasks } = this.props;\n\n    return (\n      <React.Fragment>\n        <ResponsiveContainer height={300}>\n          <BarChart\n            data={tasksHoursPartitioning(tasks)}\n            margin={{ top: 30, right: 40, left: 10, bottom: 10 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dateKey=\"hour\" />\n            <YAxis />\n            <Legend />\n            <Tooltip />\n            <Bar\n              dataKey=\"occupied\"\n              name=\"Minutes in this hours\"\n              fill=\"#8884d8\"\n            />\n          </BarChart>\n        </ResponsiveContainer>\n        <div style={{ textAlign: \"right\", padding: \"10px 20px\" }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleGenerateTasks}\n          >\n            Generate tasks\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nTaskChart.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  deleteAllTasks: PropTypes.func.isRequired,\n  addTasks: PropTypes.func.isRequired\n};\n\nexport default connect(\n  (state) => {\n    return {\n      tasks: state.tasks.items\n    };\n  },\n  { deleteAllTasks, addTasks }\n)(TaskChart);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react-router components\nimport { Switch, Route } from \"react-router\";\n\n// redux\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\n// action creators for tasks and timer\nimport { loadSavedTasks, addTask, deleteTask } from \"domain/task\";\nimport {\n  loadSavedTimerData,\n  saveTimerDataInLS,\n  resetTimerDataInLS\n} from \"domain/timer\";\n\n// application components\nimport TaskAddPanel from \"components/TaskAddPanel\";\nimport TaskList from \"components/TaskList\";\nimport TaskChart from \"components/TaskChart\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport styles from \"./styles\";\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.loadSavedTimerData();\n    this.props.loadSavedTasks();\n  }\n\n  handleChangeTab = (e, value) => {\n    const { history } = this.props;\n    history.push(value);\n  };\n\n  render() {\n    const {\n      location,\n      startTimerDate,\n      tasks,\n      classes,\n      saveTimerDataInLS,\n      resetTimerDataInLS,\n      addTask,\n      deleteTask\n    } = this.props;\n\n    return (\n      <div className={classes.layout}>\n        <Paper>\n          <Grid container spacing={32} justify=\"center\">\n            <Grid item xs={12}>\n              <TaskAddPanel\n                key={startTimerDate}\n                startTimerDate={startTimerDate}\n                onFirstStartTasksTimer={saveTimerDataInLS}\n                onEndTasksTimer={resetTimerDataInLS}\n                onAddTask={addTask}\n              />\n            </Grid>\n            <Grid item xs={12} classes={{ item: classes.taskListWrap }}>\n              <AppBar position=\"static\">\n                <Tabs\n                  value={location.pathname === \"/chart\" ? \"chart\" : \"tasks\"}\n                  centered\n                  variant=\"fullWidth\"\n                  onChange={this.handleChangeTab}\n                >\n                  <Tab label=\"Task Log\" value=\"tasks\" />\n                  <Tab label=\"Tasks Chart\" value=\"chart\" />\n                </Tabs>\n              </AppBar>\n              <div className={classes.tabsWrap}>\n                <Switch>\n                  <Route exact path=\"/chart\" component={TaskChart} />\n                  <Route\n                    exact\n                    path=\"/tasks\"\n                    render={(props) => (\n                      <TaskList\n                        {...props}\n                        tasksList={tasks}\n                        onDeleteTask={deleteTask}\n                      />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object,\n  startTimerDate: PropTypes.number,\n  tasks: PropTypes.array.isRequired,\n  classes: PropTypes.object,\n  loadSavedTimerData: PropTypes.func.isRequired,\n  saveTimerDataInLS: PropTypes.func.isRequired,\n  resetTimerDataInLS: PropTypes.func.isRequired,\n  loadSavedTasks: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired\n};\n\nexport default compose(\n  connect(\n    (state) => {\n      return {\n        startTimerDate: state.timer.startTime,\n        tasks: state.tasks.items\n      };\n    },\n    {\n      loadSavedTimerData,\n      saveTimerDataInLS,\n      resetTimerDataInLS,\n      loadSavedTasks,\n      addTask,\n      deleteTask\n    }\n  ),\n  withStyles(styles)\n)(Home);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  },\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  tabsWrap: {\r\n    padding: \"20px 0\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// redux\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\n// action creators for tasks\nimport { loadSavedTasks } from \"domain/task\";\n\n// helpers\nimport { formatTime } from \"helpers\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nclass Task extends Component {\n  componentDidMount() {\n    this.props.loadSavedTasks();\n  }\n\n  render() {\n    const { match, task, classes } = this.props;\n\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper}>\n          {task[\"id\"] ? (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={32}\n                alignItems=\"baseline\"\n                justify=\"center\"\n              >\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"left\">\n                    {task[\"name\"]}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"right\">\n                    {task[\"id\"]}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n              <Grid container spacing={32} justify=\"center\">\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task start time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"startTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify=\"center\">\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task end time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"endTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify=\"center\">\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Spend Time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\" align=\"right\">\n                    {formatTime(task[\"spendTime\"])}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <Typography variant=\"h5\" align=\"right\">\n              {`Sorry, but task with ID: ${\n                match.params[\"id\"]\n              } - does not exist`}\n            </Typography>\n          )}\n          <div className={classes.homeBtn}>\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">\n              Go to Home\n            </Button>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  match: PropTypes.object,\n  classes: PropTypes.object,\n  loadSavedTasks: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nexport default compose(\n  connect(\n    (state, ownProps) => {\n      return {\n        task: state.tasks.items.reduce((prev, task) => {\n          return +ownProps.match.params[\"id\"] === task.id\n            ? { ...prev, ...task }\n            : prev;\n        }, {})\n      };\n    },\n    {\n      loadSavedTasks\n    }\n  ),\n  withStyles(styles)\n)(Task);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    padding: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n      marginTop: theme.spacing.unit * 6,\r\n      marginBottom: theme.spacing.unit * 6,\r\n      padding: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  divider: {\r\n    margin: \"15px 0 25px 0\"\r\n  },\r\n  homeBtn: {\r\n    marginTop: \"15px\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\n\nimport styles from \"./styles\";\n\nconst NoMatch = (props) => {\n  const { location, classes } = props;\n  return (\n    <div className={classes.layout}>\n      <Paper>\n        <Grid container spacing={24} justify=\"center\">\n          <Grid item xs={12}>\n            <Typography align=\"center\" color=\"textPrimary\" variant=\"h5\">\n              {location.state && location.state.errorText\n                ? location.state.errorText\n                : `No matches for this location: ${location.pathname}`}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography align=\"center\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to=\"/\"\n              >\n                Go to Home\n              </Button>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nNoMatch.propTypes = {\n  location: PropTypes.object,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(NoMatch);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\n\n// react-router components\nimport { Switch, Route, Redirect } from \"react-router\";\n\n// application pages\nimport Home from \"pages/Home\";\nimport Task from \"pages/Task\";\nimport NoMatch from \"pages/NoMatch\";\n\n// material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport styles from \"./styles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/tasks\" />} />\n          <Route exact path=\"/tasks/:id\" component={Task} />\n          <Route exact path=\"/tasks\" component={Home} />\n          <Route exact path=\"/chart\" component={Home} />\n          <Route component={NoMatch} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default (theme) => ({\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// redux\r\nimport { Provider } from \"react-redux\";\r\n\r\n// react-router components\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// function to configure store\r\nimport configureStore from \"./domain/store\";\r\n\r\n// application main page\r\nimport App from \"./pages/App\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename=\"/task-timer\">\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { combineReducers } from \"redux\";\n\nimport * as timer from \"./timer\";\nimport * as task from \"./task\";\n\nexport default function createReducer() {\n  return combineReducers({\n    ...timer.reducer,\n    ...task.reducer\n  });\n}\n"],"sourceRoot":""}