{"version":3,"sources":["components/Timer/styles.module.scss","domain/task/reducer.js","domain/task/actions.js","domain/store.js","components/ErrorDialog/index.js","helpers/index.js","components/Timer/index.js","components/TaskAddPanel/index.js","components/TaskAddPanel/styles.js","components/TaskList/index.js","components/TaskList/styles.js","components/TaskChart/index.js","pages/Home/index.js","pages/Home/styles.js","pages/Task/index.js","pages/Task/styles.js","pages/NoMatch/index.js","pages/NoMatch/styles.js","pages/App/index.js","pages/App/styles.js","serviceWorker.js","index.js","domain/reducers.js"],"names":["module","exports","timerWrap","reducer","tasks","state","arguments","length","undefined","_ref","type","payload","Object","objectWithoutProperties","concat","toConsumableArray","id","name","startTime","endTime","spendTime","map","task","objectSpread","filter","reduxDevTools","process","ErrorDialog","props","title","open","children","onClose","react_default","a","createElement","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","onClick","color","autoFocus","formatTime","time","hrsInLocal","showMSec","cutMsec","Math","floor","sec","cutSec","min","hrs","hrsLoc","Date","getTimezoneOffset","tasksHoursPartitioning","tasksPartitioningStructure","hour","occupied","forEach","taskStartDate","taskStartHours","getHours","taskEndDate","taskEndHours","partitioningElem","find","item","_loop","i","getMinutes","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTimer","resumed","setState","timerOn","isResumed","now","timerID","setInterval","pauseTimer","isPause","clearInterval","resumeTimer","stopTimer","_this$state","_this$props","onTimerStop","shouldTimerContinue","timerMethodToPass","resetTimer","_this2","_this$state2","Grid_default","container","spacing","xs","className","styles","justify","variant","Component","defaultProps","TaskAddPanel","handleChangeTaskName","e","taskName","target","value","handleCloseErrorDialog","isShowErrorDialog","handleStopTimer","params","timerControlMethod","onAddTask","classes","taskInputWrap","Input_default","onChange","placeholder","input","taskNameInput","components_ErrorDialog","components_Timer","withStyles","theme","textAlign","width","fontWeight","TaskList","tasksList","onDeleteTask","tableWrap","Table_default","table","TableHead_default","TableRow_default","root","headRow","TableCell_default","head","headCell","TableBody_default","index","key","bodyRow","body","bodyCell","contained","btn","label","btnLabel","component","Link","to","colSpan","align","noTaskCell","display","overflowX","padding","backgroundColor","palette","common","white","fontSize","paddingTop","paddingBottom","borderRadius","&:hover","TaskChart","es6","height","data","margin","top","right","left","bottom","strokeDasharray","dateKey","dataKey","fill","connect","Home","handleChangeTab","history","push","location","addTask","deleteTask","layout","Paper_default","components_TaskAddPanel","taskListWrap","AppBar_default","position","Tabs_default","pathname","centered","Tab_default","tabsWrap","react_router","exact","path","render","components_TaskChart","components_TaskList","assign","compose","_layout","marginLeft","unit","marginRight","defineProperty","breakpoints","up","Task","match","paper","Fragment","alignItems","Typography_default","Divider_default","divider","homeBtn","ownProps","reduce","prev","marginTop","marginBottom","errorText","index_es","App","CssBaseline_default","NoMatch","Boolean","window","hostname","store","createStore","combineReducers","ReactDOM","es","react_router_dom","basename","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f36c332.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrap\":\"styles_timerWrap__gO9r2\"};","import { ADD_TASK, ADD_TASKS, DELETE_TASK, DELETE_ALL_TASKS } from \"./actions\";\r\n\r\nexport const reducer = {\r\n  tasks(state = [], { type, ...payload }) {\r\n    switch (type) {\r\n      case ADD_TASK:\r\n        return [\r\n          ...state,\r\n          {\r\n            id: payload.id,\r\n            name: payload.name,\r\n            startTime: payload.startTime,\r\n            endTime: payload.endTime,\r\n            spendTime: payload.endTime - payload.startTime\r\n          }\r\n        ];\r\n\r\n      case ADD_TASKS:\r\n        return payload.tasks.map((task) => {\r\n          return { ...task };\r\n        });\r\n\r\n      case DELETE_TASK:\r\n        return state.filter((task) => task.id !== payload.id);\r\n\r\n      case DELETE_ALL_TASKS:\r\n        return [];\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n","export const ADD_TASK = \"ADD_TASK\";\nexport const ADD_TASKS = \"ADD_TASKS\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const DELETE_ALL_TASKS = \"DELETE_ALL_TASK\";\n\nexport const addTask = (payload) => {\n  return {\n    type: ADD_TASK,\n    ...payload\n  };\n};\n\nexport const addTasks = (payload) => {\n  return {\n    type: ADD_TASKS,\n    tasks: payload\n  };\n};\n\nexport const deleteTask = (id) => {\n  return {\n    type: DELETE_TASK,\n    id\n  };\n};\n\nexport const deleteAllTasks = () => {\n  return {\n    type: DELETE_ALL_TASKS\n  };\n};\n","import { createStore } from \"redux\";\nimport createReducer from \"./reducers\";\n\nconst reduxDevTools =\n  process.env.NODE_ENV === \"development\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__();\n\nexport default function configureStore() {\n  return createStore(createReducer(), reduxDevTools);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ErrorDialog = (props) => {\n  const { id, title, open, children, onClose } = props;\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby={`${id}-dialog-title`}\n      aria-describedby={`${id}-dialog-description`}\n    >\n      <DialogTitle id={`${id}-dialog-title`}>{title}</DialogTitle>\n      <DialogContent id={`${id}-dialog-description`}>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nErrorDialog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.node\n};\n\nexport default ErrorDialog;\n","export const formatTime = (time, hrsInLocal, showMSec = false) => {\n  const cutMsec = Math.floor((time % 1000) / 100);\n  const sec = time / 1000;\n  const cutSec = Math.floor(sec % 60);\n  const min = Math.floor((sec % 3600) / 60);\n  const hrs = Math.floor((sec / 3600) % 24);\n  const hrsLoc = Math.floor(\n    (hrs + -(new Date().getTimezoneOffset() / 60)) % 24\n  );\n\n  // prettier-ignore\n  if (hrsInLocal) {\n    return showMSec\n      ? `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n      : `${hrsLoc < 10 ? \"0\" : \"\"}${hrsLoc}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n  }\n\n  // prettier-ignore\n  return showMSec\n    ? `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}:${cutMsec}`\n    : `${hrs < 10 ? \"0\" : \"\"}${hrs}:${min < 10 ? \"0\" : \"\"}${min}:${cutSec < 10 ? \"0\" : \"\"}${cutSec}`;\n};\n\nexport const tasksHoursPartitioning = (tasks = []) => {\n  let tasksPartitioningStructure = [\n    { hour: 0, occupied: 0 },\n    { hour: 1, occupied: 0 },\n    { hour: 2, occupied: 0 },\n    { hour: 3, occupied: 0 },\n    { hour: 4, occupied: 0 },\n    { hour: 5, occupied: 0 },\n    { hour: 6, occupied: 0 },\n    { hour: 7, occupied: 0 },\n    { hour: 8, occupied: 0 },\n    { hour: 9, occupied: 0 },\n    { hour: 10, occupied: 0 },\n    { hour: 11, occupied: 0 },\n    { hour: 12, occupied: 0 },\n    { hour: 13, occupied: 0 },\n    { hour: 14, occupied: 0 },\n    { hour: 15, occupied: 0 },\n    { hour: 16, occupied: 0 },\n    { hour: 17, occupied: 0 },\n    { hour: 18, occupied: 0 },\n    { hour: 19, occupied: 0 },\n    { hour: 20, occupied: 0 },\n    { hour: 21, occupied: 0 },\n    { hour: 22, occupied: 0 },\n    { hour: 23, occupied: 0 }\n  ];\n\n  tasks.forEach((task) => {\n    const taskStartDate = new Date(task.startTime);\n    const taskStartHours = taskStartDate.getHours();\n    const taskEndDate = new Date(task.endTime);\n    const taskEndHours = taskEndDate.getHours();\n    const timeDifferenceHours = taskEndHours - taskStartHours;\n\n    if (timeDifferenceHours === 0) {\n      let partitioningElem = tasksPartitioningStructure.find(\n        (item) => item.hour === taskStartHours\n      );\n\n      partitioningElem.occupied =\n        partitioningElem.occupied + Math.floor(task.spendTime / 1000 / 60);\n    } else {\n      for (let i = taskStartHours; i <= taskEndHours; i++) {\n        let partitioningElem = tasksPartitioningStructure.find(\n          (item) => item.hour === i\n        );\n\n        switch (i) {\n          case taskStartHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + (60 - taskStartDate.getMinutes());\n            break;\n\n          case taskEndHours:\n            partitioningElem.occupied =\n              partitioningElem.occupied + taskEndDate.getMinutes();\n            break;\n\n          default:\n            partitioningElem.occupied = 60;\n            break;\n        }\n      }\n    }\n  });\n\n  return tasksPartitioningStructure;\n};\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatTime } from \"../../helpers\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timerOn: false,\r\n      isPause: false,\r\n      isResumed: false,\r\n      startTime: 0,\r\n      time: 0\r\n    };\r\n\r\n    this.timerID = null;\r\n  }\r\n\r\n  startTimer = (resumed) => {\r\n    this.setState({\r\n      timerOn: true,\r\n      isResumed: !!resumed,\r\n      startTime: Date.now() - this.state.time,\r\n      time: this.state.time\r\n    });\r\n\r\n    this.timerID = setInterval(() => {\r\n      this.setState({\r\n        time: Date.now() - this.state.startTime\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  pauseTimer = () => {\r\n    this.setState({\r\n      timerOn: false,\r\n      isPause: true\r\n    });\r\n\r\n    clearInterval(this.timerID);\r\n  };\r\n\r\n  resumeTimer = () => {\r\n    this.startTimer(true);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    const { time, startTime } = this.state;\r\n    const { onTimerStop, shouldTimerContinue } = this.props;\r\n\r\n    this.pauseTimer();\r\n\r\n    if (typeof onTimerStop === \"function\") {\r\n      /* define a timer management method that will be passed to the parent handler,\r\n      so that it can call it after its actions */\r\n      let timerMethodToPass = shouldTimerContinue\r\n        ? this.resumeTimer\r\n        : this.resetTimer;\r\n\r\n      onTimerStop(\r\n        {\r\n          id: this.timerID,\r\n          startTime,\r\n          endTime: time + startTime\r\n        },\r\n        timerMethodToPass\r\n      );\r\n    } else {\r\n      this.resetTimer();\r\n    }\r\n  };\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.timerID);\r\n\r\n    this.setState({\r\n      timerOn: false,\r\n      isPause: false,\r\n      isResumed: false,\r\n      time: 0,\r\n      startTime: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { time, timerOn, isPause, isResumed } = this.state;\r\n\r\n    return (\r\n      <Grid container spacing={16}>\r\n        <Grid item xs={12}>\r\n          <div className={styles.timerWrap}>\r\n            {formatTime(time, false, true)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {timerOn ? (\r\n            isResumed ? (\r\n              <Grid container justify={\"center\"} spacing={16}>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color={\"secondary\"}\r\n                    onClick={this.stopTimer}\r\n                  >\r\n                    Stop\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant={\"contained\"} onClick={this.resetTimer}>\r\n                    Reset timer\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                color={\"secondary\"}\r\n                onClick={this.stopTimer}\r\n              >\r\n                Stop\r\n              </Button>\r\n            )\r\n          ) : isPause ? (\r\n            <Grid container justify={\"center\"} spacing={16}>\r\n              <Grid item>\r\n                <Button\r\n                  variant={\"contained\"}\r\n                  color={\"secondary\"}\r\n                  onClick={this.stopTimer}\r\n                >\r\n                  Stop\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant={\"contained\"}\r\n                  color={\"primary\"}\r\n                  onClick={this.resumeTimer}\r\n                >\r\n                  Resume\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Button\r\n              variant={\"contained\"}\r\n              color={\"primary\"}\r\n              onClick={() => this.startTimer(false)}\r\n            >\r\n              Start\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nTimer.propTypes = {\r\n  onTimerStop: PropTypes.func,\r\n  shouldTimerContinue: PropTypes.bool\r\n};\r\n\r\nTimer.defaultProps = {\r\n  shouldTimerContinue: false\r\n};\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ErrorDialog from \"components/ErrorDialog/index\";\r\nimport Timer from \"components/Timer/index\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass TaskAddPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      taskName: \"\",\r\n      isShowErrorDialog: false\r\n    };\r\n  }\r\n\r\n  handleChangeTaskName = (e) => {\r\n    this.setState({\r\n      taskName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleCloseErrorDialog = () => {\r\n    this.setState({\r\n      isShowErrorDialog: false\r\n    });\r\n  };\r\n\r\n  handleStopTimer = (params, timerControlMethod) => {\r\n    const { taskName } = this.state;\r\n    const { onAddTask } = this.props;\r\n\r\n    if (!taskName) {\r\n      this.setState({\r\n        isShowErrorDialog: true\r\n      });\r\n    } else {\r\n      timerControlMethod();\r\n\r\n      onAddTask({\r\n        name: taskName,\r\n        ...params\r\n      });\r\n\r\n      this.setState({\r\n        taskName: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { taskName, isShowErrorDialog } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12} classes={{ item: classes.taskInputWrap }}>\r\n          <Input\r\n            value={taskName}\r\n            onChange={this.handleChangeTaskName}\r\n            placeholder={\"Name of your Task\"}\r\n            classes={{ input: classes.taskNameInput }}\r\n          />\r\n          <ErrorDialog\r\n            id={\"task-name-error\"}\r\n            open={isShowErrorDialog}\r\n            title={\"Empty task name\"}\r\n            onClose={this.handleCloseErrorDialog}\r\n          >\r\n            You are trying close your task without name, enter the title and try\r\n            again\r\n          </ErrorDialog>\r\n        </Grid>\r\n        <Grid item xs={12} classes={{ item: classes.timerWrap }}>\r\n          <Timer onTimerStop={this.handleStopTimer} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nTaskAddPanel.propTypes = {\r\n  onAddTask: PropTypes.func.isRequired,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(TaskAddPanel);\r\n","export default (theme) => ({\r\n  taskInputWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  taskNameInput: {\r\n    width: \"270px\",\r\n    color: \"#3e50c7\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\"\r\n  },\r\n  timerWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { formatTime } from \"helpers\";\n\nimport { withStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nconst TaskList = (props) => {\n  const { tasksList, classes, onDeleteTask } = props;\n\n  return (\n    <div className={classes.tableWrap}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow classes={{ root: classes.headRow }}>\n            <TableCell classes={{ head: classes.headCell }}>№</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Task</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time start\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Time end</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>\n              Time spend\n            </TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Info</TableCell>\n            <TableCell classes={{ head: classes.headCell }}>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tasksList.length > 0 ? (\n            tasksList.map((task, index) => (\n              <TableRow key={task.id} className={classes.bodyRow}>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {index + 1}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {task.name}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.startTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.endTime, true)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  {formatTime(task.spendTime)}\n                </TableCell>\n                <TableCell classes={{ body: classes.bodyCell }}>\n                  <Button\n                    variant={\"contained\"}\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    component={Link}\n                    to={`/tasks/${task.id}`}\n                  >\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant={\"contained\"}\n                    classes={{\n                      contained: classes.btn,\n                      label: classes.btnLabel\n                    }}\n                    onClick={() => onDeleteTask(task.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow className={classes.bodyRow}>\n              <TableCell\n                colSpan={7}\n                align={\"center\"}\n                classes={{ body: classes.noTaskCell }}\n              >\n                No tasks for show\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  tasksList: PropTypes.array.isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\n\nTaskList.defaultProps = {\n  tasks: []\n};\n\nexport default withStyles(styles)(TaskList);\n","export default (theme) => ({\n  tableWrap: {\n    display: \"block\",\n    overflowX: \"auto\",\n    padding: \"0 20px\"\n  },\n  table: {\n    width: \"100%\"\n  },\n  headRow: {\n    backgroundColor: theme.palette.common.white\n  },\n  headCell: {\n    fontSize: \"14px\",\n    color: \"#9d9d9d\"\n  },\n  bodyRow: {\n    backgroundColor: \"#eaf6ff\"\n  },\n  bodyCell: {\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    fontWeight: \"500\",\n    color: \"#3e50c7\"\n  },\n  noTaskCell: {\n    paddingTop: \"20px\",\n    paddingBottom: \"20px\"\n  },\n  btn: {\n    backgroundColor: theme.palette.common.white,\n    borderRadius: \"2px\",\n    \"&:hover\": {\n      backgroundColor: \"#f5f5f5\"\n    }\n  },\n  btnLabel: {\n    fontWeight: \"normal\",\n    color: \"#3e50c7\"\n  }\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend\n} from \"recharts\";\n\nimport { tasksHoursPartitioning } from \"helpers\";\n\nclass TaskChart extends Component {\n  render() {\n    const { tasks } = this.props;\n\n    return (\n      <ResponsiveContainer height={300}>\n        <BarChart\n          data={tasksHoursPartitioning(tasks)}\n          margin={{ top: 30, right: 40, left: 10, bottom: 10 }}\n        >\n          <CartesianGrid strokeDasharray={\"3 3\"} />\n          <XAxis dateKey={\"hour\"} />\n          <YAxis />\n          <Legend />\n          <Bar\n            dataKey={\"occupied\"}\n            name={\"Minutes in this hours\"}\n            fill={\"#8884d8\"}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nTaskChart.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\n\nexport default connect((state) => {\n  return {\n    tasks: state.tasks\n  };\n})(TaskChart);\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTask, deleteTask } from \"domain/task\";\r\n\r\nimport TaskAddPanel from \"components/TaskAddPanel/index\";\r\nimport TaskList from \"components/TaskList/index\";\r\nimport TaskChart from \"components/TaskChart/index\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass Home extends Component {\r\n  handleChangeTab = (e, value) => {\r\n    const { history } = this.props;\r\n    history.push(value);\r\n  };\r\n\r\n  render() {\r\n    const { location, tasks, classes, addTask, deleteTask } = this.props;\r\n\r\n    return (\r\n      <div className={classes.layout}>\r\n        <Paper>\r\n          <Grid container spacing={32} justify={\"center\"}>\r\n            <Grid item xs={12}>\r\n              <TaskAddPanel onAddTask={addTask} />\r\n            </Grid>\r\n            <Grid item xs={12} classes={{ item: classes.taskListWrap }}>\r\n              <AppBar position={\"static\"}>\r\n                <Tabs\r\n                  value={location.pathname === \"/chart\" ? \"chart\" : \"tasks\"}\r\n                  centered\r\n                  variant=\"fullWidth\"\r\n                  onChange={this.handleChangeTab}\r\n                >\r\n                  <Tab label=\"Task Log\" value={\"tasks\"} />\r\n                  <Tab label=\"Tasks Chart\" value={\"chart\"} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <div className={classes.tabsWrap}>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={\"/chart\"}\r\n                    render={(props) => <TaskChart {...props} />}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={\"/tasks\"}\r\n                    render={(props) => (\r\n                      <TaskList\r\n                        {...props}\r\n                        tasksList={tasks}\r\n                        onDeleteTask={deleteTask}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Switch>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n  tasks: PropTypes.array.isRequired,\r\n  classes: PropTypes.object,\r\n  addTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    (state) => {\r\n      return {\r\n        tasks: state.tasks\r\n      };\r\n    },\r\n    { addTask, deleteTask }\r\n  ),\r\n  withStyles(styles)\r\n)(Home);\r\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  },\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  },\r\n  tabsWrap: {\r\n    padding: \"20px 0\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { formatTime } from \"helpers\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./styles\";\n\nclass Task extends Component {\n  render() {\n    const { match, task, classes } = this.props;\n\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper}>\n          {task[\"id\"] ? (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={32}\n                alignItems={\"baseline\"}\n                justify={\"center\"}\n              >\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"left\">\n                    {task[\"name\"]}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h4\" align=\"right\">\n                    {task[\"id\"]}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Divider className={classes.divider} />\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task start time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"startTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Task end time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle2\" align=\"right\">\n                    {formatTime(task[\"endTime\"], true)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={32} justify={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography variant=\"subtitle1\">Spend Time</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\" align=\"right\">\n                    {formatTime(task[\"spendTime\"])}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <Typography variant=\"h5\" align=\"right\">\n              {`Sorry, but task with ID: ${\n                match.params[\"id\"]\n              } - does not exist`}\n            </Typography>\n          )}\n          <div className={classes.homeBtn}>\n            <Button\n              variant={\"contained\"}\n              color={\"primary\"}\n              component={Link}\n              to={\"/\"}\n            >\n              Go to Home\n            </Button>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  match: PropTypes.object,\n  classes: PropTypes.object,\n  task: PropTypes.object.isRequired\n};\n\nexport default compose(\n  connect((state, ownProps) => {\n    return {\n      task: state.tasks.reduce((prev, task) => {\n        return +ownProps.match.params[\"id\"] === task.id\n          ? { ...prev, ...task }\n          : prev;\n      }, {})\n    };\n  }),\n  withStyles(styles)\n)(Task);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    padding: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n      marginTop: theme.spacing.unit * 6,\r\n      marginBottom: theme.spacing.unit * 6,\r\n      padding: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  divider: {\r\n    margin: \"15px 0 25px 0\"\r\n  },\r\n  homeBtn: {\r\n    marginTop: \"15px\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\n\nimport styles from \"./styles\";\n\nconst NoMatch = (props) => {\n  const { location, classes } = props;\n  return (\n    <div className={classes.layout}>\n      <Paper>\n        <Grid container spacing={24} justify={\"center\"}>\n          <Grid item xs={12}>\n            <Typography align={\"center\"} color={\"textPrimary\"} variant={\"h5\"}>\n              {location.state && location.state.errorText\n                ? location.state.errorText\n                : `No matches for this location: ${location.pathname}`}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography align={\"center\"}>\n              <Button\n                color={\"primary\"}\n                variant={\"contained\"}\n                component={Link}\n                to={\"/\"}\n              >\n                Go to Home\n              </Button>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nNoMatch.propTypes = {\n  location: PropTypes.object,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(NoMatch);\n","export default (theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    },\r\n    padding: \"10px 15px\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\n\nimport Home from \"pages/Home/index\";\nimport Task from \"pages/Task/index\";\nimport NoMatch from \"pages/NoMatch/index\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport styles from \"./styles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <Switch>\n          <Route exact path={\"/\"} render={() => <Redirect to={\"/tasks\"} />} />\n          <Route exact path={\"/tasks/:id\"} component={Task} />\n          <Route exact path={\"/tasks\"} component={Home} />\n          <Route exact path={\"/chart\"} component={Home} />\n          <Route component={NoMatch} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default (theme) => ({\r\n  taskListWrap: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./domain/store\";\r\nimport App from \"./pages/App/index\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename=\"/task-timer\">\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { combineReducers } from \"redux\";\n\nimport * as task from \"./task\";\n\nexport default function createReducer() {\n  return combineReducers({\n    ...task.reducer\n  });\n}\n"],"sourceRoot":""}